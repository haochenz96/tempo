///EDITED

/*
 * -------------------------------------------------
 * EDITED Nextflow config file for Sarek
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the configuration folder and imported under a
 * profile name here.
 *
 */

manifest {
  author = 'we did'
  description = 'test pipeline'
  homePage = 'https://github.com/mskcc/vaporware/tree/feature/nextflow'
  mainScript = 'main_align_markDups_BaseRecal.nf'
  name = 'no name yet'
  nextflowVersion = '>=0.32.0'
  version = '0.1'
}

// Provides extra options for the Java and Nextflow runtime. 
// It must be a blank separated list of -Dkey[=value] properties.
env {
    NXF_OPTS="-Xms10g"    // trying 10g instead of 
}

params {
  outDir = "s3://evan-nf-test-outputs17feb2019/"     // Path to output directory, default PWD
  sample =  "WES_fastqs_10_samples_only_AWSBatch.tsv"   // sample TSV file
  genome = 'GRCh37'     // Default reference genome is GRCh38
  // path to reference files subdirectory
  genome_base = 's3://gatkbundle-b37/'  
  verbose = true        // Enable for more verbose information, default false
  test = false          // boolean Not testing by default
  markdup_java_options = '"-Xms4000m -Xmx7g"' //Established values for markDuplicate memory consumption
  // see https://github.com/SciLifeLab/Sarek/blob/master/conf/base.config
  singleCPUMem  = 7.GB  // for processes that are using more memory but a single CPU only
  publishDirMode = 'link' // publishDir mode is 'link' by default

  genomes {
    // Evan comment: we're naturally only using smallGRCh37 for tests
    'smallGRCh37' {
      acLoci      = "${params.genome_base}/1000G_phase3_20130502_SNP_maf0.3.small.loci"
      dbsnp       = "${params.genome_base}/dbsnp_138.b37.small.vcf"
      dbsnpIndex  = "${dbsnp}.idx"
      genomeFile  = "${params.genome_base}/human_g1k_v37_decoy.small.fasta"
      bwaIndex    = "${genomeFile}.{amb,ann,bwt,pac,sa}"
      genomeDict  = "${params.genome_base}/human_g1k_v37_decoy.small.dict"
      genomeIndex = "${genomeFile}.fai"
      intervals   = "${params.genome_base}/small.intervals"
      knownIndels = "${params.genome_base}/{1000G_phase1,Mills_and_1000G_gold_standard}.indels.b37.small.vcf"
      knownIndelsIndex = "${params.genome_base}/{1000G_phase1,Mills_and_1000G_gold_standard}.indels.b37.small.vcf.idx"
      snpeffDb    = "GRCh37.75"
    }
    // Evan comment: GRCh37 needs to be constructed in order to actually work
    'GRCh37' {
      acLoci      = "${params.genome_base}/1000G_phase3_20130502_SNP_maf0.3.loci"
      dbsnp       = "${params.genome_base}/dbsnp_138.b37.vcf"
      dbsnpIndex  = "${dbsnp}.idx"
      genomeFile  = "${params.genome_base}/b37.fasta"
      bwaIndex    = "${genomeFile}.{amb,ann,bwt,pac,sa}"
      genomeDict  = "${params.genome_base}/b37.dict"
      genomeIndex = "${genomeFile}.fai"
      intervals   = "${params.genome_base}/wgs_calling_regions_CAW.list"
      knownIndels = "${params.genome_base}/{1000G_phase1,Mills_and_1000G_gold_standard}.indels.b37.vcf"
      knownIndelsIndex = "${params.genome_base}/{1000G_phase1,Mills_and_1000G_gold_standard}.indels.b37.vcf.idx"
      snpeffDb    = "GRCh37.75"
    }
    // Evan comment: GRCh38 needs to be constructed in order to actually work
    'GRCh38' {
      acLoci        = "${params.genome_base}/1000G_phase3_GRCh38_maf0.3.loci"
      dbsnp         = "${params.genome_base}/dbsnp_146.hg38.vcf.gz"
      dbsnpIndex    = "${dbsnp}.tbi"
      genomeFile    = "${params.genome_base}/Homo_sapiens_assembly38.fasta"
      genomeDict    = "${params.genome_base}/Homo_sapiens_assembly38.dict"
      genomeIndex   = "${genomeFile}.fai"
      bwaIndex      = "${genomeFile}.64.{alt,amb,ann,bwt,pac,sa}"
      intervals     = "${params.genome_base}/wgs_calling_regions.hg38.bed"
      knownIndels   = "${params.genome_base}/{Mills_and_1000G_gold_standard.indels.hg38,beta/Homo_sapiens_assembly38.known_indels}.vcf.gz"
      knownIndelsIndex = "${params.genome_base}/{Mills_and_1000G_gold_standard.indels.hg38,beta/Homo_sapiens_assembly38.known_indels}.vcf.gz.tbi"
      snpeffDb      = "GRCh38.86"
      // This a nasty-looking list of allele-frequencies files. Add/remove files to match to your sets
      //AF_files      = "${params.genome_base}/{00-All.dbsnp_151.hg38.CAF.TOPMED.alternate.allele.freq,hapmap_3.3_grch38_pop_stratified_af.HMAF,SweGen_hg38_stratified.SWAF}.vcf"
      //AF_indexes    = "${params.genome_base}/{00-All.dbsnp_151.hg38.CAF.TOPMED.alternate.allele.freq,hapmap_3.3_grch38_pop_stratified_af.HMAF,SweGen_hg38_stratified.SWAF}.vcf.idx"
    }
  }
}

// Run profiles are specified with "-profile" at the command line
profiles {

    docker {
        includeConfig "conf/docker.config"
        includeConfig "conf/containers.config"
    }

    singularity {
        includeConfig "conf/singularity.config"
        includeConfig "conf/containers.config"
    }

    lsf_juno {
        includeConfig "conf/singularity.config"
        includeConfig "conf/containers.config"
        executor = "lsf"
        perJobMemLimit = false
        maxForks = 8

        process {
            memory = "0.02 GB"
            time = "30m"
            }

        env {
            NXF_SINGULARITY_CACHEDIR = "$HOME"
        }

    }
    awsbatch{
        includeConfig "conf/awsbatch.config"
        includeConfig "conf/docker.config"
        includeConfig "conf/containers.config"
    }
}
