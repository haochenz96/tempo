///EDITED

/*
 * -------------------------------------------------
 * EDITED Nextflow config file for Sarek
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the configuration folder and imported under a
 * profile name here.
 *
 */

manifest {
  author = 'we did'
  description = 'test pipeline'
  homePage = 'https://github.com/mskcc/vaporware/tree/feature/nextflow'
  mainScript = 'main_align_markDups_BaseRecal.nf'
  name = 'Vaporware'
  nextflowVersion = '>=0.32.0'
  version = '0.5.0'
}

// Provides extra options for the Java and Nextflow runtime. 
// It must be a blank separated list of -Dkey[=value] properties.
env {
    NXF_OPTS="-Xms10g"    // trying 10g instead of 
}

params {
  outDir = "${PWD}"     // Path to output directory, default PWD
  sample =  "test_samples.tsv"   // sample TSV file
  genome = 'GRCh37'     // Default reference genome is GRCh38
  // path to reference files subdirectory
  verbose = false        // Enable for more verbose information, default false
  test = false          // boolean Not testing by default
  markdup_java_options = '"-Xms4000m -Xmx7g"' //Established values for markDuplicate memory consumption
  // see https://github.com/SciLifeLab/Sarek/blob/master/conf/base.config
  singleCPUMem  = 7.GB  // for processes that are using more memory but a single CPU only
  publishDirMode = 'link' // publishDir mode is 'link' by default
  tools = 'delly,facets,mutect2,manta,strelka2,msisensor'
  sequenceType = "exome"
  debug = false 
  genome_base = params.genome == 'GRCh37' ? "/juno/work/taylorlab/cmopipeline/mskcc-igenomes/igenomes/Homo_sapiens/GATK/GRCh37" : params.genome == 'GRCh38' ? "/juno/work/taylorlab/cmopipeline/mskcc-igenomes/igenomes/Homo_sapiens/GATK/GRCh38" : "/juno/work/taylorlab/cmopipeline/mskcc-igenomes/igenomes/smallGRCh37"
}

// Run profiles are specified with "-profile" at the command line
profiles {

    docker {
        includeConfig "conf/docker.config"
        includeConfig "conf/containers.config"
        includeConfig "conf/resources.config"
        includeConfig "conf/references.config"
    }

    singularity {
        includeConfig "conf/singularity.config"
        includeConfig "conf/containers.config"
        includeConfig "conf/resources.config"
        includeConfig "conf/references.config"
    }

    juno {
        includeConfig "conf/juno.config"
        includeConfig "conf/singularity.config"
        includeConfig "conf/containers.config"
        includeConfig "conf/resources_juno.config"
        includeConfig "conf/references.config"

        if (params.sequenceType == "exome") {
            includeConfig "conf/exome.config"
        }
    }

    awsbatch {
        params.mem_per_core = false
	params.genome_base = params.genome == 'GRCh37' ? "s3://mskcc-igenomes/igenomes/Homo_sapiens/GATK/GRCh37" : params.genome == 'GRCh38' ? "s3://mskcc-igenomes/igenomes/Homo_sapiens/GATK/GRCh38" : "s3://mskcc-igenomes/igenomes/smallGRCh37"
        includeConfig "conf/awsbatch.config"
        includeConfig "conf/docker.config"
        includeConfig "conf/containers.config"
        includeConfig "conf/resources_aws.config"
        includeConfig "conf/references.config"

        if (params.sequenceType == "exome") {
            includeConfig "conf/exome.config"
        }
    }

    test {
        params.mem_per_core = false
	params.genome_base = "test-data/reference"
	params.genome = "smallGRCh37"
        includeConfig "conf/docker.config"
        includeConfig "conf/containers.config"
        includeConfig "conf/resources.config"
        includeConfig "conf/references.config"

    }
}
