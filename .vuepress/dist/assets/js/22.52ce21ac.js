(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{205:function(e,t,a){"use strict";a.r(t);var o=a(0),n=Object(o.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"variant-annotation-and-filtering"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variant-annotation-and-filtering","aria-hidden":"true"}},[e._v("#")]),e._v(" Variant annotation and filtering")]),e._v(" "),a("h2",{attrs:{id:"somatic-snvs-and-indels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#somatic-snvs-and-indels","aria-hidden":"true"}},[e._v("#")]),e._v(" Somatic SNVs and indels")]),e._v(" "),a("p",[e._v("Variant-level annotation, filtering, and flagging of variants with further filter flags occur in the "),a("code",[e._v("SomaticCombineChannel")]),e._v(" and "),a("code",[e._v("SomaticAnnotateMaf")]),e._v(" processes. The union of variants that pass the somatic scoring models intrinsic to the callers ("),a("code",[e._v('FILTER="PASS"')]),e._v(" in the VCF files) are combined, giving precedence to MuTect2 for any site where both callers detected a variant.")]),e._v(" "),a("p",[e._v("The functional effect of variants is predicted using "),a("a",{attrs:{href:"https://www.ensembl.org/vep",target:"_blank",rel:"noopener noreferrer"}},[e._v("VEP"),a("OutboundLink")],1),e._v(" using "),a("a",{attrs:{href:"https://github.com/mskcc/vcf2maf",target:"_blank",rel:"noopener noreferrer"}},[e._v("vcf2maf"),a("OutboundLink")],1),e._v(", which also converts from VCF into a tab-delimited MAF file. See notes on use of "),a("router-link",{attrs:{to:"/docs/reference-resources.html#preferred-transcript-isoforms"}},[e._v("preferred transcript isoforms")]),e._v(" and "),a("a",{attrs:{href:"https://useast.ensembl.org/info/docs/tools/vep/vep_formats.html#output",target:"_blank",rel:"noopener noreferrer"}},[e._v("VEP annotation outputs"),a("OutboundLink")],1),e._v(".")],1),e._v(" "),a("p",[e._v("The following columns are added to the final MAF file, in addition to those added during the VEP annotation:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Strelka2FILTER")]),e._v(": Indicates that Strelka2 detected the variant but did not classify it as a somatic variant.")]),e._v(" "),a("li",[a("code",[e._v("gnomAD_FILTER")]),e._v(": Indicates that the variant was detected in the gnomAD workflow, but ultimately "),a("em",[e._v("not")]),e._v(" classified as a "),a("em",[e._v("germline")]),e._v(" variant. Note that this is not used in current filtering schema.")]),e._v(" "),a("li",[a("code",[e._v("RepeatMasker")]),e._v(" and "),a("code",[e._v("EncodeDacMapability")]),e._v(": The variant locus is in a repeat, low-mapability, or hard-to-sequence region. More details in the "),a("router-link",{attrs:{to:"/docs/reference-resources.html#repeatmasker-and-mappability-blacklist"}},[e._v("reference file description")]),e._v(".")],1),e._v(" "),a("li",[a("code",[e._v("PoN")]),e._v(": Panel-of-normals, the number of normal samples in which the variant was detected. "),a("router-link",{attrs:{to:"/docs/wes-panel-of-normals.html"}},[e._v("More details on the implementation for exomes")]),e._v(". Under development for genomes, currently applies exome PoN.")],1),e._v(" "),a("li",[a("code",[e._v("Ref_Tri")]),e._v(": Trinucleotide context of SNVs, normalized to pyrimidine-to-purine transversions.")]),e._v(" "),a("li",[e._v("gnomAD allele frequencies, "),a("router-link",{attrs:{to:"/docs/gnomad.html"}},[e._v("more details here")]),e._v(":\n"),a("ul",[a("li",[e._v("Exomes, columns named "),a("code",[e._v("non_cancer_*")]),e._v(": Allele counts ("),a("code",[e._v("AC")]),e._v(") and frequencies ("),a("code",[e._v("AF")]),e._v(") for the variant in the non-TCGA population and sub-populations of gnomAD.")]),e._v(" "),a("li",[e._v("Genomes, columns named ("),a("code",[e._v("AC_*")]),e._v("|"),a("code",[e._v("AF_*")]),e._v("): Allele counts and frequencies for the variant in populations and sub-populations of gnomAD.")])])],1),e._v(" "),a("li",[e._v("Raw allele counts: total and strand specific ("),a("code",[e._v("*_fwd")]),e._v(" and "),a("code",[e._v("*_rev")]),e._v(") allele "),a("code",[e._v("count")]),e._v(" and "),a("code",[e._v("depth")]),e._v(" for tumor ("),a("code",[e._v("t_*")]),e._v(") and normal ("),a("code",[e._v("n_*")]),e._v("). These are unfiltered values, in contrast to those from the variant callers, generated by "),a("a",{attrs:{href:"https://github.com/zengzheng123/GetBaseCountsMultiSample",target:"_blank",rel:"noopener noreferrer"}},[e._v("GetBaseCountsMultiSample"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("li",[a("code",[e._v("alt_bias")]),e._v(": For variants with a "),a("em",[e._v("raw")]),e._v(" depth of at least 5 reads, this is true if all "),a("em",[e._v("raw")]),e._v(" variant-supporting reads are on either the forward or reverse strand.")]),e._v(" "),a("li",[a("code",[e._v("ref_bias")]),e._v(": For variants with a "),a("em",[e._v("raw")]),e._v(" depth of at least 5 reads, this is true if all "),a("em",[e._v("raw")]),e._v(" reads are on either the forward or reverse strand.")]),e._v(" "),a("li",[e._v("Mutation hotspots, also see :\n"),a("ul",[a("li",[a("code",[e._v("snv_hotspot")]),e._v(": SNV hotspots.")]),e._v(" "),a("li",[a("code",[e._v("threeD_hotspot")]),e._v(': 3D hotspots, in contrast to abovementioned "linear" hotspots.')]),e._v(" "),a("li",[a("code",[e._v("indel_hotspot")]),e._v(" and "),a("code",[e._v("indel_hotspot_type")]),e._v(": In-frame indel indel hotspots, and indication of whether it overlaps a prior indel hotspot locus ("),a("code",[e._v("prior")]),e._v(") or overlaps an SNV hotspot ("),a("code",[e._v("novel")]),e._v(").")]),e._v(" "),a("li",[a("code",[e._v("Hotspot")]),e._v(": "),a("code",[e._v("TRUE")]),e._v(" if either a linear SNV or indel hotspot.")])])]),e._v(" "),a("li",[e._v("OncoKB annotation:\n"),a("ul",[a("li",[a("code",[e._v("mutation_effect")]),e._v(" and "),a("code",[e._v("oncogenic")]),e._v(": Indicate the functional effect of the mutation and whether it is deemed to be oncogenic")]),e._v(" "),a("li",[a("code",[e._v("LEVEL_*")]),e._v(" and "),a("code",[e._v("Highest_level")]),e._v(": Indicates whether there is any drug at the given level of actionability and which is the highest level of actionability, if any. Note that this is cancer-type agnostic in current implementation.")]),e._v(" "),a("li",[a("code",[e._v("citations")]),e._v(": References for OncoKB annotation.")])])]),e._v(" "),a("li",[e._v("Variant caller metadata (development feature, subject to changes):\n"),a("ul",[a("li",[e._v("MuTect2"),a("sup",[e._v("1")]),e._v(":\n"),a("ul",[a("li",[a("code",[e._v("MBQ")]),e._v(": Median base quality, comma-separated for reference and alternate allele.")]),e._v(" "),a("li",[a("code",[e._v("MFRL")]),e._v(": Median fragment length, comma-separated for reference and alternate allele.")]),e._v(" "),a("li",[a("code",[e._v("MMQ")]),e._v(": Median mapping quality, comma-separated for reference and alternate allele.")]),e._v(" "),a("li",[a("code",[e._v("MPOS")]),e._v(": Median distance of variant from end of read.")]),e._v(" "),a("li",[a("code",[e._v("OCM")]),e._v(": Number of reads whose original alignment does not match the reference.")]),e._v(" "),a("li",[a("code",[e._v("RPA")]),e._v(": If tandem repeat, number of times repeated (can be comma-separated for reference and alternate allele).")]),e._v(" "),a("li",[a("code",[e._v("STR")]),e._v(": Boolean, indicating that variant is a short tandem repeat.")]),e._v(" "),a("li",[a("code",[e._v("ECNT")]),e._v(": Number of events in haplotype.")])])]),e._v(" "),a("li",[e._v("Strelka2"),a("sup",[e._v("2")]),e._v(":\n"),a("ul",[a("li",[a("code",[e._v("MQ")]),e._v(": Root mean square mapping quality.")]),e._v(" "),a("li",[a("code",[e._v("SNVSB")]),e._v(": Strand bias for somatic SNVs.")]),e._v(" "),a("li",[a("code",[e._v("FDP")]),e._v(": Number of basecalls filtered from original read depth for tier 1* read counts, for tumor ("),a("code",[e._v("t_FDP")]),e._v(") and normal ("),a("code",[e._v("n_FDP")]),e._v(").")]),e._v(" "),a("li",[a("code",[e._v("SUBDP")]),e._v(": Number of reads below tier 1 mapping-quality threshold aligned across site, for tumor ("),a("code",[e._v("t_SUBDP")]),e._v(") and normal ("),a("code",[e._v("n_SUBDP")]),e._v(").")]),e._v(" "),a("li",[a("code",[e._v("RU")]),e._v(": If indel, smallest repeating sequence unit in inserted or deleted sequence.")]),e._v(" "),a("li",[a("code",[e._v("IC")]),e._v(": If indel, number of times "),a("code",[e._v("RU")]),e._v(" is repeated in variant.")])])])])])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("FILTER")]),e._v(" column in the unfiltered MAF file, can contain any semi colon-separated combination of the following filter flags, or say "),a("code",[e._v("PASS")]),e._v(":")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("part_of_mnv")]),e._v(": The variant is likely part of another called multi-nucleotide variant (MNV).")]),e._v(" "),a("li",[a("code",[e._v("multiallelic2")]),e._v(": Multiallelic loci, likely artifact. For variants called by Strelka2. The "),a("code",[e._v("2")]),e._v(" is added due the presence of "),a("code",[e._v("multiallelic")]),e._v(" flag in the MuTect2 VCFs.")]),e._v(" "),a("li",[a("code",[e._v("strand_bias")]),e._v(", variants likely artifactual due to strand bias:\n"),a("ul",[a("li",[e._v("For variants called by Mutect2, if all supporting reads come from one strand and there are a least 10 reads on both strands in either normal or tumor sample.")]),e._v(" "),a("li",[e._v("For variants called by Strelka2, if the the total alternate read count is above 10 and all of these fall on either strand; or low mapping-quality variant suffering from bias in both supporting reads and total reads.")])])]),e._v(" "),a("li",[a("code",[e._v("caller_conflict")]),e._v(": Variant was detected by both callers, but did not pass Strelka2's tresholds for somatic variant calling.")]),e._v(" "),a("li",[e._v("The following read depth-based flags are parameterized according to the sequencing platform, see the "),a("code",[e._v("exome.config")]),e._v(" and "),a("code",[e._v("genome.config")]),e._v(" files.\n"),a("ul",[a("li",[a("code",[e._v("low_vaf")]),e._v(": Variant falls below lower treshold for tumor variant allele fraction (VAF).")]),e._v(" "),a("li",[a("code",[e._v("low_t_depth")]),e._v(": Variant falls below lower treshold for total depth in the tumor.")]),e._v(" "),a("li",[a("code",[e._v("low_t_alt_count")]),e._v(": Variant falls below lower treshold for reads supporting variant allele in tumor.")]),e._v(" "),a("li",[a("code",[e._v("low_n_depth")]),e._v(": Variant falls below lower threshold for total depth in normal.")]),e._v(" "),a("li",[a("code",[e._v("high_n_alt_count")]),e._v(": Variant exceeds upper threshold for reads supporting variant allele normal.")]),e._v(" "),a("li",[a("code",[e._v("mapability")]),e._v("/"),a("code",[e._v("repeatmasker")]),e._v(": Variant falls in blacklisted genomic region.")]),e._v(" "),a("li",[a("code",[e._v("high_gnomad_pop_af")]),e._v(": Variant exceeds upper threshold for allele fraction in gnomAD.")]),e._v(" "),a("li",[a("code",[e._v("PoN")]),e._v(": Variant exceeds upper threshold for count in panel of normals.")]),e._v(" "),a("li",[a("code",[e._v("low_mapping_quality")]),e._v(": For indels called by Strelka2, variant falls below lower mapping quality treshhold.")])])])]),e._v(" "),a("p",[a("small",[a("sup",[e._v("1")]),e._v("See the MuTect2 documentation for more information: https://software.broadinstitute.org/gatk/documentation/article?id=11005")]),a("br"),e._v(" "),a("small",[a("sup",[e._v("2")]),e._v("See the Strelka2 documentation for more information: https://github.com/Illumina/strelka/blob/v2.9.x/docs/userGuide/README.md")])]),e._v(" "),a("h3",{attrs:{id:"whitelisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#whitelisting","aria-hidden":"true"}},[e._v("#")]),e._v(" Whitelisting")]),e._v(" "),a("p",[e._v("Mutational hotspots, where the value in "),a("code",[e._v("Hotspot")]),e._v(" is "),a("code",[e._v("TRUE")]),e._v(", are retained in the filtered MAF file, if they:")]),e._v(" "),a("ul",[a("li",[e._v("Are flagged with "),a("code",[e._v("low_vaf")]),e._v(" but the tumor VAF is at least 0.02.")]),e._v(" "),a("li",[e._v("Are flagged with "),a("code",[e._v("low_mapping_quality")]),e._v(", "),a("code",[e._v("low_t_depth")]),e._v(", or "),a("code",[e._v("strand_bias")]),e._v(".\n"),a("em",[e._v("Note that combinations of above filter flags results in filtering of the variant.")])])])])},[],!1,null,null,null);t.default=n.exports}}]);